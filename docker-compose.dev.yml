version: "3.8"
services:
  # Feed-fetcher
  request-queue:
    image: s12v/elasticmq
    volumes:
      - ./elasticmq.conf:/etc/elasticmq/elasticmq.conf
    ports:
      - "9324:9324"
      - "9325:9325"
  mrss-postgres:
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    # Comment below to show mongo logs
    # logging:
    #   driver: none
    image: postgres:14.1-alpine
    ports:
      - "5444:5432"
    volumes:
      - db-feedfetcher-postgres-data:/var/lib/postgresql/data
      - ./services/feed-fetcher/sql/setup.sql:/docker-entrypoint-initdb.d/setup.sql
  mrss-feedfetcher:
    restart: on-failure:3
    build:
      context: services/feed-fetcher
      dockerfile: Dockerfile
      target: build
    ports:
      - "5000:5000"
    volumes:
      - ./services/feed-fetcher:/usr/src/app
      - /usr/src/app/node_modules/
    command: npm run start:dev
    depends_on:
      - mrss-postgres
      - request-queue
    env_file:
      - services/feed-fetcher/.env.local
    environment:
      - POSTGRES_URI=postgres://postgres:postgres@mrss-postgres:5432/feedfetcher
      - AWS_SQS_QUEUE_URL=http://request-queue:9324/queue/request-queue
      - AWS_SQS_QUEUE_SERVICE_ENDPOINT=http://request-queue:9324
      - AWS_REGION=us-east-1
      - AWS_SQS_FAILED_URL_QUEUE_ENDPOINT=http://request-queue:9324
      - AWS_SQS_FAILED_URL_QUEUE_URL=http://request-queue:9324/queue/failed-requests-queue
      - AWS_SQS_FAILED_URL_QUEUE_REGION=us-east-1
      - FAILED_REQUEST_DURATION_THRESHOLD_HOURS=36

  mrss-mongo:
    restart: on-failure:5
    command: mongod --port 27017
    logging:
      driver: none
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - "db-mongodb-data:/data/db"

  # Schedule emitter
  mrss-schedule-emitter-service:
    build:
      context: services/backend-api
      dockerfile: dockerfiles/web/api.Dockerfile
      target: build
    restart: on-failure:3
    volumes:
      - ./services/backend-api:/usr/src/app
      - /usr/src/app/node_modules/
    depends_on:
      - mrss-mongo
    env_file: services/backend-api/.env.local
    environment:
      - NODE_ENV=local
      - MONGODB_URI=mongodb://mrss-mongo:27017/rss
      - AWS_SCHEDULE_QUEUE_ENDPOINT=http://request-queue:9324
      - AWS_SCHEDULE_QUEUE_REGION=us-east-1
      - AWS_SCHEDULE_QUEUE_URL=http://request-queue:9324/queue/schedule-queue
      - AWS_URL_REQUEST_QUEUE_ENDPOINT=http://request-queue:9324
      - AWS_URL_REQUEST_QUEUE_REGION=us-east-1
      - AWS_URL_REQUEST_QUEUE_URL=http://request-queue:9324/queue/request-queue
    command: npm run start:schedule-emitter:local

  # Web
  mrss-web-api:
    build:
      context: services/backend-api
      dockerfile: dockerfiles/web/api.Dockerfile
      target: build
    restart: on-failure:3
    volumes:
      - ./services/backend-api:/usr/src/app
      - /usr/src/app/node_modules/
    depends_on:
      - mrss-mongo
    ports:
      - "8000:8000"
    env_file: services/backend-api/.env.local
    environment:
      - NODE_ENV=local
      - MONGODB_URI=mongodb://mrss-mongo:27017/rss
    command: npm run start:local

  mrss-web-client:
    build:
      context: services/backend-api/client
      dockerfile: ../dockerfiles/web/client.Dockerfile
      target: build
    restart: on-failure:3
    ports:
      - "3000:3000"
    expose:
      - "3000"
    environment:
      - NODE_ENV=local
      - HOST=0.0.0.0
      - API_PROXY_URL=http://mrss-web-api:8000
      - VITE_USE_POLLING=true
    depends_on:
      - mrss-web-api
    volumes:
      - ./services/backend-api/client:/usr/src/app
      - /usr/src/app/node_modules/
    command: npx vite --host

volumes:
  db-mongodb-data:
  db-feedfetcher-postgres-data:
    driver: local
