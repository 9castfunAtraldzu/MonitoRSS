version: "3.8"
services:
  mrss-rabbitmq-broker:
    image: rabbitmq:3-management-alpine
    container_name: 'mrss-rabbitmq-broker'
    ports:
        - 5672:5672
        - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 1s
      retries: 20

  mrss-mongo:
    restart: on-failure:5
    command: mongod --port 27017
    logging:
      driver: none
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - "db-mongodb-data:/data/db"
  
  mrss-postgres-feedfetcher:
    container_name: mrss-postgres-feedfetcher
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    # Comment below to show logs
    logging:
      driver: none
    image: postgres:14.1-alpine
    ports:
      - "5431:5432"
    volumes:
      - db-feedfetcher-postgres-data:/var/lib/postgresql/data
      - ./services/feed-fetcher/sql/setup.sql:/docker-entrypoint-initdb.d/setup.sql
      
  mrss-postgres-feedhandler:
    container_name: mrss-postgres-feedhandler
    restart: always
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-d', 'postgres', '-U', 'postgres']
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    # Comment below to show logs
    logging:
      driver: none
    image: postgres:14.1-alpine
    ports:
      - '5430:5432'
    volumes:
      - db-feedhandler-postgres-data:/var/lib/postgresql/data
      - ./services/feed-handler/sql/setup.sql:/docker-entrypoint-initdb.d/setup.sql

  mrss-discord-rest-listener:
    restart: on-failure:3
    build:
      context: services/discord-rest-listener
      dockerfile: Dockerfile
      target: build
    volumes:
      - ./services/discord-rest-listener:/usr/src/app
      - /usr/src/app/node_modules/
    depends_on:
      mrss-rabbitmq-broker:
        condition: service_healthy
      mrss-mongo:
        condition: service_started
    command: npm start
    env_file:
      - ./.env.local
    environment:
      - DISCORD_REST_LISTENER_RABBITMQ_URI=amqp://mrss-rabbitmq-broker:5672
      - DISCORD_REST_LISTENER_MONGO_URI=mongodb://mrss-mongo:27017/rss

  mrss-feedfetcher:
    restart: on-failure:3
    build:
      context: services/feed-fetcher
      dockerfile: Dockerfile
      target: build
    ports:
      - "5000:5000"
    volumes:
      - ./services/feed-fetcher:/usr/src/app
      - /usr/src/app/node_modules/
    command: npm run start:local
    depends_on:
      - mrss-postgres-feedfetcher
    env_file:
      - ./.env.local
    environment:
      - FEED_FETCHER_POSTGRES_URI=postgres://postgres:postgres@mrss-postgres-feedfetcher:5432/feedfetcher
      - FEED_FETCHER_FEEDS_MONGODB_URI=mongodb://mrss-mongo:27017/rss
      - FEED_FETCHER_API_KEY=feed-fetcher-api-key
      - FEED_FETCHER_API_PORT=5000
      - FEED_FETCHER_SYNC_DB=true
      - FEED_FETCHER_RABBITMQ_BROKER_URL=amqp://mrss-rabbitmq-broker:5672

  mrss-feedhandler:
    restart: on-failure:3
    build:
      context: services/feed-handler
      dockerfile: Dockerfile
      target: build
    ports:
      - "5001:5000"
    volumes:
      - ./services/feed-handler:/usr/src/app
      - /usr/src/app/node_modules/
    command: npm run start:local
    depends_on:
      - mrss-postgres-feedhandler
      - mrss-feedfetcher
      - mrss-rabbitmq-broker
    env_file:
      - ./.env.local
    environment:
      - FEED_HANDLER_POSTGRES_URI=postgres://postgres:postgres@mrss-postgres-feedhandler:5432
      - FEED_HANDLER_DISCORD_RABBITMQ_URI=amqp://mrss-rabbitmq-broker:5672
      - FEED_HANDLER_POSTGRES_DATABASE=feedhandler
      - FEED_HANDLER_FEED_MONGODB_URI=mongodb://mrss-mongo:27017/rss
      - FEED_HANDLER_FEED_REQUEST_SERVICE_URL=http://mrss-feedfetcher:5000
      - FEED_HANDLER_API_PORT=5000
      - FEED_HANDLER_RABBITMQ_BROKER_URL=amqp://guest:guest@mrss-rabbitmq-broker:5672

  # Schedule emitter
  mrss-schedule-emitter-service:
    build:
      context: services/backend-api
      dockerfile: dockerfiles/web/api.Dockerfile
      target: build
    restart: on-failure:3
    volumes:
      - ./services/backend-api:/usr/src/app
      - /usr/src/app/node_modules/
    depends_on:
      - mrss-mongo
    env_file:
      - ./.env.local
    environment:
      - NODE_ENV=local
      - BACKEND_API_MONGODB_URI=mongodb://mrss-mongo:27017/rss
      - BACKEND_API_FEED_HANDLER_API_HOST=----IRRELEVANT----
      - BACKEND_API_FEED_HANDLER_API_KEY=----IRRELEVANT----
      - BACKEND_API_FEED_FETCHER_API_HOST=----IRRELEVANT----
      - BACKEND_API_FEED_FETCHER_API_KEY=----IRRELEVANT----
      - BACKEND_API_LOGIN_REDIRECT_URI=----IRRELEVANT----
      - BACKEND_API_DISCORD_REDIRECT_URI=----IRRELEVANT----
      - BACKEND_API_DEFAULT_REFRESH_RATE_MINUTES=0.1
      - BACKEND_API_DEFAULT_MAX_FEEDS=10
      - BACKEND_API_FEED_USER_AGENT=----IRRELEVANT----
      - BACKEND_API_RABBITMQ_BROKER_URL=amqp://guest:guest@mrss-rabbitmq-broker:5672/
    command: npm run start:schedule-emitter:local

  # # Web - Backend api
  # mrss-web-api:
  #   build:
  #     context: services/backend-api
  #     dockerfile: dockerfiles/web/api.Dockerfile
  #     target: build
  #   restart: on-failure:3
  #   volumes:
  #     - ./services/backend-api:/usr/src/app
  #     - /usr/src/app/node_modules/
  #   depends_on:
  #     - mrss-mongo
  #     - mrss-feedhandler
  #     - mrss-feedfetcher
  #   ports:
  #     - "8000:8000"
  #   env_file:
  #     - ./.env.local
  #   environment:
  #     - BACKEND_API_NODE_ENV=local
  #     - BACKEND_API_MONGODB_URI=mongodb://mrss-mongo:27017/rss
  #     - BACKEND_API_FEED_HANDLER_API_HOST=http://mrss-feedhandler:5000
  #     - BACKEND_API_FEED_HANDLER_API_KEY=feed-handler-api-key
  #     - BACKEND_API_FEED_FETCHER_API_HOST=http://mrss-feedfetcher:5000
  #     - BACKEND_API_FEED_FETCHER_API_KEY=feed-fetcher-api-key
  #     - BACKEND_API_LOGIN_REDIRECT_URI=http://localhost:8000
  #     - BACKEND_API_DISCORD_REDIRECT_URI=http://localhost:8000/api/v1/discord/callback
  #     - BACKEND_API_DEFAULT_REFRESH_RATE_MINUTES=0.1
  #     - BACKEND_API_DEFAULT_MAX_FEEDS=10
  #     - BACKEND_API_FEED_USER_AGENT=MonitoRSS
  #   command: npm run start:local

  # mrss-web-client:
  #   build:
  #     context: services/backend-api/client
  #     dockerfile: ../dockerfiles/web/client.Dockerfile
  #     target: build
  #   restart: on-failure:3
  #   ports:
  #     - "3000:3000"
  #   expose:
  #     - "3000"
  #   environment:
  #     - NODE_ENV=local
  #     - HOST=0.0.0.0
  #     - API_PROXY_URL=http://mrss-web-api:8000
  #     - VITE_USE_POLLING=true
  #   depends_on:
  #     - mrss-web-api
  #   volumes:
  #     - ./services/backend-api/client:/usr/src/app
  #     - /usr/src/app/node_modules/
  #   command: npx vite --host

volumes:
  db-mongodb-data:
  db-feedfetcher-postgres-data:
  db-feedhandler-postgres-data:
    driver: local
