import {
  Column,
  CreateDateColumn,
  Entity,
  JoinColumn,
  OneToOne,
  PrimaryGeneratedColumn,
} from 'typeorm';
import { RequestFetchOptions, RequestResponseStatus } from '../constants';
import { Response } from './response.entity';

@Entity()
export class Request {
  @PrimaryGeneratedColumn()
  id!: number;

  @Column({
    type: 'enum',
    enum: RequestResponseStatus,
  })
  status!: RequestResponseStatus;

  @Column({
    type: 'jsonb',
    nullable: true,
  })
  fetchOptions?: RequestFetchOptions | null;

  @Column({
    unique: true,
  })
  url!: string;

  @CreateDateColumn({
    type: 'timestamp with time zone',
  })
  createdAt!: Date;

  @Column({
    nullable: true,
  })
  errorMessage?: string;

  @OneToOne(() => Response)
  @JoinColumn()
  response?: Response | null;

  // Autogenerated by the relation above
  responseId?: number | null;
}
